{"ast":null,"code":"var _jsxFileName = \"/Users/dbasch/work/entropy-grid/src/EntropyGrid.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GRID_SIZE = 5;\nconst START_TILES = 2;\nfunction generateEmptyGrid() {\n  return Array(GRID_SIZE).fill(null).map(() => Array(GRID_SIZE).fill(null));\n}\nfunction spawnTile(grid) {\n  const empty = [];\n  for (let i = 0; i < GRID_SIZE; i++) {\n    for (let j = 0; j < GRID_SIZE; j++) {\n      if (!grid[i][j]) empty.push([i, j]);\n    }\n  }\n  if (empty.length === 0) return grid;\n  const [i, j] = empty[Math.floor(Math.random() * empty.length)];\n  grid[i][j] = Math.random() < 0.9 ? 1 : 2;\n  return [...grid];\n}\nfunction slide(row) {\n  const newRow = row.filter(x => x !== null);\n  for (let i = 0; i < newRow.length - 1; i++) {\n    if (canMerge(newRow[i], newRow[i + 1])) {\n      newRow[i] = newRow[i] + newRow[i + 1];\n      newRow[i + 1] = null;\n    }\n  }\n  return [...newRow.filter(x => x !== null), ...Array(GRID_SIZE - newRow.filter(x => x !== null).length).fill(null)];\n}\nfunction transpose(grid) {\n  return grid[0].map((_, i) => grid.map(row => row[i]));\n}\nfunction reverseRows(grid) {\n  return grid.map(row => [...row].reverse());\n}\nfunction canMerge(a, b) {\n  if (a === null || b === null) return false;\n  return (a + b) % 5 === 0; // Toy fusion rule: merge if sum divisible by 5\n}\nfunction EntropyGrid() {\n  _s();\n  const [grid, setGrid] = useState(generateEmptyGrid());\n  useEffect(() => {\n    let newGrid = [...grid];\n    for (let i = 0; i < START_TILES; i++) {\n      newGrid = spawnTile(newGrid);\n    }\n    setGrid(newGrid);\n  }, []);\n  function handleMove(dir) {\n    let newGrid;\n    if (dir === \"left\") {\n      newGrid = grid.map(row => slide(row));\n    } else if (dir === \"right\") {\n      newGrid = reverseRows(grid).map(row => slide(row));\n      newGrid = reverseRows(newGrid);\n    } else if (dir === \"up\") {\n      const transposed = transpose(grid);\n      const moved = transposed.map(row => slide(row));\n      newGrid = transpose(moved);\n    } else if (dir === \"down\") {\n      const transposed = transpose(grid);\n      const reversed = reverseRows(transposed);\n      const moved = reversed.map(row => slide(row));\n      newGrid = transpose(reverseRows(moved));\n    }\n    setGrid(spawnTile(newGrid));\n  }\n  function handleKeyDown(e) {\n    if ([\"ArrowLeft\", \"ArrowRight\", \"ArrowUp\", \"ArrowDown\"].includes(e.key)) {\n      e.preventDefault();\n      handleMove(e.key.replace(\"Arrow\", \"\").toLowerCase());\n    }\n  }\n  useEffect(() => {\n    window.addEventListener(\"keydown\", handleKeyDown);\n    return () => window.removeEventListener(\"keydown\", handleKeyDown);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-xl font-bold mb-4\",\n      children: \"Entropy Grid\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-5 gap-1\",\n      children: grid.flat().map((val, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-16 h-16 flex items-center justify-center bg-gray-200 rounded text-xl\",\n        children: val !== null && val !== void 0 ? val : \"\"\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n_s(EntropyGrid, \"GfRuz9/0nDdwa+AKWq7T090tgtg=\");\n_c = EntropyGrid;\nexport default EntropyGrid;\nvar _c;\n$RefreshReg$(_c, \"EntropyGrid\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","GRID_SIZE","START_TILES","generateEmptyGrid","Array","fill","map","spawnTile","grid","empty","i","j","push","length","Math","floor","random","slide","row","newRow","filter","x","canMerge","transpose","_","reverseRows","reverse","a","b","EntropyGrid","_s","setGrid","newGrid","handleMove","dir","transposed","moved","reversed","handleKeyDown","e","includes","key","preventDefault","replace","toLowerCase","window","addEventListener","removeEventListener","className","children","fileName","_jsxFileName","lineNumber","columnNumber","flat","val","idx","_c","$RefreshReg$"],"sources":["/Users/dbasch/work/entropy-grid/src/EntropyGrid.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\n\nconst GRID_SIZE = 5;\nconst START_TILES = 2;\n\nfunction generateEmptyGrid() {\n  return Array(GRID_SIZE)\n    .fill(null)\n    .map(() => Array(GRID_SIZE).fill(null));\n}\n\nfunction spawnTile(grid) {\n  const empty = [];\n  for (let i = 0; i < GRID_SIZE; i++) {\n    for (let j = 0; j < GRID_SIZE; j++) {\n      if (!grid[i][j]) empty.push([i, j]);\n    }\n  }\n  if (empty.length === 0) return grid;\n  const [i, j] = empty[Math.floor(Math.random() * empty.length)];\n  grid[i][j] = Math.random() < 0.9 ? 1 : 2;\n  return [...grid];\n}\n\nfunction slide(row) {\n  const newRow = row.filter(x => x !== null);\n  for (let i = 0; i < newRow.length - 1; i++) {\n    if (canMerge(newRow[i], newRow[i + 1])) {\n      newRow[i] = newRow[i] + newRow[i + 1];\n      newRow[i + 1] = null;\n    }\n  }\n  return [...newRow.filter(x => x !== null), ...Array(GRID_SIZE - newRow.filter(x => x !== null).length).fill(null)];\n}\n\nfunction transpose(grid) {\n  return grid[0].map((_, i) => grid.map(row => row[i]));\n}\n\nfunction reverseRows(grid) {\n  return grid.map(row => [...row].reverse());\n}\n\nfunction canMerge(a, b) {\n  if (a === null || b === null) return false;\n  return (a + b) % 5 === 0; // Toy fusion rule: merge if sum divisible by 5\n}\n\nfunction EntropyGrid() {\n  const [grid, setGrid] = useState(generateEmptyGrid());\n\n  useEffect(() => {\n    let newGrid = [...grid];\n    for (let i = 0; i < START_TILES; i++) {\n      newGrid = spawnTile(newGrid);\n    }\n    setGrid(newGrid);\n  }, []);\n\n  function handleMove(dir) {\n    let newGrid;\n    if (dir === \"left\") {\n      newGrid = grid.map(row => slide(row));\n    } else if (dir === \"right\") {\n      newGrid = reverseRows(grid).map(row => slide(row));\n      newGrid = reverseRows(newGrid);\n    } else if (dir === \"up\") {\n      const transposed = transpose(grid);\n      const moved = transposed.map(row => slide(row));\n      newGrid = transpose(moved);\n    } else if (dir === \"down\") {\n      const transposed = transpose(grid);\n      const reversed = reverseRows(transposed);\n      const moved = reversed.map(row => slide(row));\n      newGrid = transpose(reverseRows(moved));\n    }\n    setGrid(spawnTile(newGrid));\n  }\n\n  function handleKeyDown(e) {\n    if ([\"ArrowLeft\", \"ArrowRight\", \"ArrowUp\", \"ArrowDown\"].includes(e.key)) {\n      e.preventDefault();\n      handleMove(e.key.replace(\"Arrow\", \"\").toLowerCase());\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener(\"keydown\", handleKeyDown);\n    return () => window.removeEventListener(\"keydown\", handleKeyDown);\n  });\n\n  return (\n    <div className=\"p-4\">\n      <h1 className=\"text-xl font-bold mb-4\">Entropy Grid</h1>\n      <div className=\"grid grid-cols-5 gap-1\">\n        {grid.flat().map((val, idx) => (\n          <div\n            key={idx}\n            className=\"w-16 h-16 flex items-center justify-center bg-gray-200 rounded text-xl\"\n          >\n            {val ?? \"\"}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default EntropyGrid;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}