{"ast":null,"code":"var _jsxFileName = \"/Users/dbasch/work/entropy-grid/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [board, setBoard] = useState(Array(4).fill().map(() => Array(4).fill(0)));\n  const [score, setScore] = useState(0);\n  const [gameOver, setGameOver] = useState(false);\n\n  // Initialize the game with two random tiles\n  useEffect(() => {\n    addRandomTile();\n    addRandomTile();\n  }, []);\n\n  // Add a random tile (2 or 4) to an empty cell\n  const addRandomTile = useCallback(() => {\n    const emptyCells = [];\n    board.forEach((row, i) => {\n      row.forEach((cell, j) => {\n        if (cell === 0) {\n          emptyCells.push([i, j]);\n        }\n      });\n    });\n    if (emptyCells.length > 0) {\n      const [i, j] = emptyCells[Math.floor(Math.random() * emptyCells.length)];\n      setBoard(prevBoard => {\n        const newBoard = prevBoard.map(row => [...row]);\n        newBoard[i][j] = Math.random() < 0.9 ? 2 : 4;\n        return newBoard;\n      });\n    }\n  }, [board]);\n  const moveLeft = useCallback(board => {\n    let moved = false;\n    const newBoard = board.map(row => {\n      // Filter out zeros and merge adjacent equal numbers\n      const filteredRow = row.filter(cell => cell !== 0);\n      for (let i = 0; i < filteredRow.length - 1; i++) {\n        if (filteredRow[i] === filteredRow[i + 1]) {\n          filteredRow[i] *= 2;\n          setScore(prev => prev + filteredRow[i]);\n          filteredRow.splice(i + 1, 1);\n          moved = true;\n        }\n      }\n      // Pad with zeros\n      return [...filteredRow, ...Array(4 - filteredRow.length).fill(0)];\n    });\n    return {\n      newBoard,\n      moved\n    };\n  }, []);\n  const moveRight = useCallback(board => {\n    let moved = false;\n    const newBoard = board.map(row => {\n      // Filter out zeros and merge adjacent equal numbers\n      const filteredRow = row.filter(cell => cell !== 0);\n      for (let i = filteredRow.length - 1; i > 0; i--) {\n        if (filteredRow[i] === filteredRow[i - 1]) {\n          filteredRow[i] *= 2;\n          setScore(prev => prev + filteredRow[i]);\n          filteredRow.splice(i - 1, 1);\n          moved = true;\n        }\n      }\n      // Pad with zeros\n      return [...Array(4 - filteredRow.length).fill(0), ...filteredRow];\n    });\n    return {\n      newBoard,\n      moved\n    };\n  }, []);\n  const moveUp = useCallback(board => {\n    let moved = false;\n    const newBoard = Array(4).fill().map(() => Array(4).fill(0));\n    for (let j = 0; j < 4; j++) {\n      let column = board.map(row => row[j]).filter(cell => cell !== 0);\n      for (let i = 0; i < column.length - 1; i++) {\n        if (column[i] === column[i + 1]) {\n          column[i] *= 2;\n          setScore(prev => prev + column[i]);\n          column.splice(i + 1, 1);\n          moved = true;\n        }\n      }\n      // Pad with zeros and update the new board\n      column = [...column, ...Array(4 - column.length).fill(0)];\n      for (let i = 0; i < 4; i++) {\n        newBoard[i][j] = column[i];\n      }\n    }\n    return {\n      newBoard,\n      moved\n    };\n  }, []);\n  const moveDown = useCallback(board => {\n    let moved = false;\n    const newBoard = Array(4).fill().map(() => Array(4).fill(0));\n    for (let j = 0; j < 4; j++) {\n      let column = board.map(row => row[j]).filter(cell => cell !== 0);\n      for (let i = column.length - 1; i > 0; i--) {\n        if (column[i] === column[i - 1]) {\n          column[i] *= 2;\n          setScore(prev => prev + column[i]);\n          column.splice(i - 1, 1);\n          moved = true;\n        }\n      }\n      // Pad with zeros and update the new board\n      column = [...Array(4 - column.length).fill(0), ...column];\n      for (let i = 0; i < 4; i++) {\n        newBoard[i][j] = column[i];\n      }\n    }\n    return {\n      newBoard,\n      moved\n    };\n  }, []);\n  const checkGameOver = useCallback(() => {\n    // Check for empty cells\n    for (let i = 0; i < 4; i++) {\n      for (let j = 0; j < 4; j++) {\n        if (board[i][j] === 0) return;\n      }\n    }\n\n    // Check for possible merges\n    for (let i = 0; i < 4; i++) {\n      for (let j = 0; j < 4; j++) {\n        if (i < 3 && board[i][j] === board[i + 1][j] || j < 3 && board[i][j] === board[i][j + 1]) {\n          return;\n        }\n      }\n    }\n    setGameOver(true);\n  }, [board]);\n\n  // Handle keyboard events\n  useEffect(() => {\n    const handleKeyDown = event => {\n      if (gameOver) return;\n      let result;\n      switch (event.key) {\n        case 'ArrowUp':\n          result = moveUp(board);\n          break;\n        case 'ArrowDown':\n          result = moveDown(board);\n          break;\n        case 'ArrowLeft':\n          result = moveLeft(board);\n          break;\n        case 'ArrowRight':\n          result = moveRight(board);\n          break;\n        default:\n          return;\n      }\n      if (result.moved) {\n        setBoard(result.newBoard);\n        setTimeout(() => {\n          addRandomTile();\n          checkGameOver();\n        }, 100);\n      }\n    };\n    window.addEventListener('keydown', handleKeyDown);\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  }, [board, gameOver, moveUp, moveDown, moveLeft, moveRight, addRandomTile, checkGameOver]);\n  const resetGame = () => {\n    setBoard(Array(4).fill().map(() => Array(4).fill(0)));\n    setScore(0);\n    setGameOver(false);\n    setTimeout(() => {\n      addRandomTile();\n      addRandomTile();\n    }, 100);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-100 flex flex-col items-center justify-center\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-8 rounded-lg shadow-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-4xl font-bold text-gray-800\",\n          children: \"2048\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-right\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-2xl font-bold text-gray-700\",\n            children: [\"Score: \", score]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: resetGame,\n            className: \"mt-2 px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600\",\n            children: \"New Game\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-4 gap-4 bg-gray-200 p-4 rounded-lg\",\n        children: board.map((row, i) => row.map((cell, j) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `w-20 h-20 flex items-center justify-center rounded-lg text-2xl font-bold\n                  ${cell === 0 ? 'bg-gray-300' : 'bg-yellow-100'}\n                  ${cell >= 2048 ? 'bg-yellow-400' : ''}\n                  transition-all duration-200`,\n          children: cell !== 0 && cell\n        }, `${i}-${j}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 15\n        }, this)))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this), gameOver && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4 text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-2xl font-bold text-red-500\",\n          children: \"Game Over!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: resetGame,\n          className: \"mt-2 px-4 py-2 bg-red-500 text-white rounded hover:bg-red-600\",\n          children: \"Try Again\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 189,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"IrXqFUiUntwcRROPoHCKwIGJ7d4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","jsxDEV","_jsxDEV","App","_s","board","setBoard","Array","fill","map","score","setScore","gameOver","setGameOver","addRandomTile","emptyCells","forEach","row","i","cell","j","push","length","Math","floor","random","prevBoard","newBoard","moveLeft","moved","filteredRow","filter","prev","splice","moveRight","moveUp","column","moveDown","checkGameOver","handleKeyDown","event","result","key","setTimeout","window","addEventListener","removeEventListener","resetGame","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/dbasch/work/entropy-grid/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\n\nfunction App() {\n  const [board, setBoard] = useState(Array(4).fill().map(() => Array(4).fill(0)));\n  const [score, setScore] = useState(0);\n  const [gameOver, setGameOver] = useState(false);\n\n  // Initialize the game with two random tiles\n  useEffect(() => {\n    addRandomTile();\n    addRandomTile();\n  }, []);\n\n  // Add a random tile (2 or 4) to an empty cell\n  const addRandomTile = useCallback(() => {\n    const emptyCells = [];\n    board.forEach((row, i) => {\n      row.forEach((cell, j) => {\n        if (cell === 0) {\n          emptyCells.push([i, j]);\n        }\n      });\n    });\n\n    if (emptyCells.length > 0) {\n      const [i, j] = emptyCells[Math.floor(Math.random() * emptyCells.length)];\n      setBoard(prevBoard => {\n        const newBoard = prevBoard.map(row => [...row]);\n        newBoard[i][j] = Math.random() < 0.9 ? 2 : 4;\n        return newBoard;\n      });\n    }\n  }, [board]);\n\n  const moveLeft = useCallback((board) => {\n    let moved = false;\n    const newBoard = board.map(row => {\n      // Filter out zeros and merge adjacent equal numbers\n      const filteredRow = row.filter(cell => cell !== 0);\n      for (let i = 0; i < filteredRow.length - 1; i++) {\n        if (filteredRow[i] === filteredRow[i + 1]) {\n          filteredRow[i] *= 2;\n          setScore(prev => prev + filteredRow[i]);\n          filteredRow.splice(i + 1, 1);\n          moved = true;\n        }\n      }\n      // Pad with zeros\n      return [...filteredRow, ...Array(4 - filteredRow.length).fill(0)];\n    });\n    return { newBoard, moved };\n  }, []);\n\n  const moveRight = useCallback((board) => {\n    let moved = false;\n    const newBoard = board.map(row => {\n      // Filter out zeros and merge adjacent equal numbers\n      const filteredRow = row.filter(cell => cell !== 0);\n      for (let i = filteredRow.length - 1; i > 0; i--) {\n        if (filteredRow[i] === filteredRow[i - 1]) {\n          filteredRow[i] *= 2;\n          setScore(prev => prev + filteredRow[i]);\n          filteredRow.splice(i - 1, 1);\n          moved = true;\n        }\n      }\n      // Pad with zeros\n      return [...Array(4 - filteredRow.length).fill(0), ...filteredRow];\n    });\n    return { newBoard, moved };\n  }, []);\n\n  const moveUp = useCallback((board) => {\n    let moved = false;\n    const newBoard = Array(4).fill().map(() => Array(4).fill(0));\n    \n    for (let j = 0; j < 4; j++) {\n      let column = board.map(row => row[j]).filter(cell => cell !== 0);\n      for (let i = 0; i < column.length - 1; i++) {\n        if (column[i] === column[i + 1]) {\n          column[i] *= 2;\n          setScore(prev => prev + column[i]);\n          column.splice(i + 1, 1);\n          moved = true;\n        }\n      }\n      // Pad with zeros and update the new board\n      column = [...column, ...Array(4 - column.length).fill(0)];\n      for (let i = 0; i < 4; i++) {\n        newBoard[i][j] = column[i];\n      }\n    }\n    return { newBoard, moved };\n  }, []);\n\n  const moveDown = useCallback((board) => {\n    let moved = false;\n    const newBoard = Array(4).fill().map(() => Array(4).fill(0));\n    \n    for (let j = 0; j < 4; j++) {\n      let column = board.map(row => row[j]).filter(cell => cell !== 0);\n      for (let i = column.length - 1; i > 0; i--) {\n        if (column[i] === column[i - 1]) {\n          column[i] *= 2;\n          setScore(prev => prev + column[i]);\n          column.splice(i - 1, 1);\n          moved = true;\n        }\n      }\n      // Pad with zeros and update the new board\n      column = [...Array(4 - column.length).fill(0), ...column];\n      for (let i = 0; i < 4; i++) {\n        newBoard[i][j] = column[i];\n      }\n    }\n    return { newBoard, moved };\n  }, []);\n\n  const checkGameOver = useCallback(() => {\n    // Check for empty cells\n    for (let i = 0; i < 4; i++) {\n      for (let j = 0; j < 4; j++) {\n        if (board[i][j] === 0) return;\n      }\n    }\n\n    // Check for possible merges\n    for (let i = 0; i < 4; i++) {\n      for (let j = 0; j < 4; j++) {\n        if (\n          (i < 3 && board[i][j] === board[i + 1][j]) ||\n          (j < 3 && board[i][j] === board[i][j + 1])\n        ) {\n          return;\n        }\n      }\n    }\n\n    setGameOver(true);\n  }, [board]);\n\n  // Handle keyboard events\n  useEffect(() => {\n    const handleKeyDown = (event) => {\n      if (gameOver) return;\n\n      let result;\n      switch (event.key) {\n        case 'ArrowUp':\n          result = moveUp(board);\n          break;\n        case 'ArrowDown':\n          result = moveDown(board);\n          break;\n        case 'ArrowLeft':\n          result = moveLeft(board);\n          break;\n        case 'ArrowRight':\n          result = moveRight(board);\n          break;\n        default:\n          return;\n      }\n\n      if (result.moved) {\n        setBoard(result.newBoard);\n        setTimeout(() => {\n          addRandomTile();\n          checkGameOver();\n        }, 100);\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  }, [board, gameOver, moveUp, moveDown, moveLeft, moveRight, addRandomTile, checkGameOver]);\n\n  const resetGame = () => {\n    setBoard(Array(4).fill().map(() => Array(4).fill(0)));\n    setScore(0);\n    setGameOver(false);\n    setTimeout(() => {\n      addRandomTile();\n      addRandomTile();\n    }, 100);\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-100 flex flex-col items-center justify-center\">\n      <div className=\"bg-white p-8 rounded-lg shadow-lg\">\n        <div className=\"flex justify-between items-center mb-4\">\n          <h1 className=\"text-4xl font-bold text-gray-800\">2048</h1>\n          <div className=\"text-right\">\n            <div className=\"text-2xl font-bold text-gray-700\">Score: {score}</div>\n            <button\n              onClick={resetGame}\n              className=\"mt-2 px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600\"\n            >\n              New Game\n            </button>\n          </div>\n        </div>\n        \n        <div className=\"grid grid-cols-4 gap-4 bg-gray-200 p-4 rounded-lg\">\n          {board.map((row, i) =>\n            row.map((cell, j) => (\n              <div\n                key={`${i}-${j}`}\n                className={`w-20 h-20 flex items-center justify-center rounded-lg text-2xl font-bold\n                  ${cell === 0 ? 'bg-gray-300' : 'bg-yellow-100'}\n                  ${cell >= 2048 ? 'bg-yellow-400' : ''}\n                  transition-all duration-200`}\n              >\n                {cell !== 0 && cell}\n              </div>\n            ))\n          )}\n        </div>\n\n        {gameOver && (\n          <div className=\"mt-4 text-center\">\n            <p className=\"text-2xl font-bold text-red-500\">Game Over!</p>\n            <button\n              onClick={resetGame}\n              className=\"mt-2 px-4 py-2 bg-red-500 text-white rounded hover:bg-red-600\"\n            >\n              Try Again\n            </button>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}