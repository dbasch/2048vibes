{"ast":null,"code":"var _jsxFileName = \"/Users/dbasch/work/entropy-grid/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [board, setBoard] = useState(Array(4).fill().map(() => Array(4).fill(0)));\n  const [score, setScore] = useState(0);\n  const [gameOver, setGameOver] = useState(false);\n\n  // Initialize the game with two random tiles\n  useEffect(() => {\n    addRandomTile();\n    addRandomTile();\n  }, []);\n\n  // Add a random tile (2 or 4) to an empty cell\n  const addRandomTile = () => {\n    const emptyCells = [];\n    board.forEach((row, i) => {\n      row.forEach((cell, j) => {\n        if (cell === 0) {\n          emptyCells.push([i, j]);\n        }\n      });\n    });\n    if (emptyCells.length > 0) {\n      const [i, j] = emptyCells[Math.floor(Math.random() * emptyCells.length)];\n      const newBoard = [...board];\n      newBoard[i][j] = Math.random() < 0.9 ? 2 : 4;\n      setBoard(newBoard);\n    }\n  };\n\n  // Handle keyboard events\n  useEffect(() => {\n    const handleKeyDown = event => {\n      if (gameOver) return;\n      let moved = false;\n      const newBoard = JSON.parse(JSON.stringify(board));\n      switch (event.key) {\n        case 'ArrowUp':\n          moved = moveUp(newBoard);\n          break;\n        case 'ArrowDown':\n          moved = moveDown(newBoard);\n          break;\n        case 'ArrowLeft':\n          moved = moveLeft(newBoard);\n          break;\n        case 'ArrowRight':\n          moved = moveRight(newBoard);\n          break;\n        default:\n          return;\n      }\n      if (moved) {\n        setBoard(newBoard);\n        addRandomTile();\n        checkGameOver();\n      }\n    };\n    window.addEventListener('keydown', handleKeyDown);\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  }, [board, gameOver]);\n\n  // Move functions will be implemented here\n  const moveLeft = board => {\n    let moved = false;\n    for (let i = 0; i < 4; i++) {\n      const row = board[i].filter(cell => cell !== 0);\n      for (let j = 0; j < row.length - 1; j++) {\n        if (row[j] === row[j + 1]) {\n          row[j] *= 2;\n          setScore(prev => prev + row[j]);\n          row.splice(j + 1, 1);\n          moved = true;\n        }\n      }\n      const newRow = [...row, ...Array(4 - row.length).fill(0)];\n      if (JSON.stringify(board[i]) !== JSON.stringify(newRow)) {\n        moved = true;\n      }\n      board[i] = newRow;\n    }\n    return moved;\n  };\n  const moveRight = board => {\n    let moved = false;\n    for (let i = 0; i < 4; i++) {\n      const row = board[i].filter(cell => cell !== 0);\n      for (let j = row.length - 1; j > 0; j--) {\n        if (row[j] === row[j - 1]) {\n          row[j] *= 2;\n          setScore(prev => prev + row[j]);\n          row.splice(j - 1, 1);\n          moved = true;\n        }\n      }\n      const newRow = [...Array(4 - row.length).fill(0), ...row];\n      if (JSON.stringify(board[i]) !== JSON.stringify(newRow)) {\n        moved = true;\n      }\n      board[i] = newRow;\n    }\n    return moved;\n  };\n  const moveUp = board => {\n    let moved = false;\n    for (let j = 0; j < 4; j++) {\n      let column = board.map(row => row[j]).filter(cell => cell !== 0);\n      for (let i = 0; i < column.length - 1; i++) {\n        if (column[i] === column[i + 1]) {\n          column[i] *= 2;\n          setScore(prev => prev + column[i]);\n          column.splice(i + 1, 1);\n          moved = true;\n        }\n      }\n      const newColumn = [...column, ...Array(4 - column.length).fill(0)];\n      for (let i = 0; i < 4; i++) {\n        if (board[i][j] !== newColumn[i]) {\n          moved = true;\n        }\n        board[i][j] = newColumn[i];\n      }\n    }\n    return moved;\n  };\n  const moveDown = board => {\n    let moved = false;\n    for (let j = 0; j < 4; j++) {\n      let column = board.map(row => row[j]).filter(cell => cell !== 0);\n      for (let i = column.length - 1; i > 0; i--) {\n        if (column[i] === column[i - 1]) {\n          column[i] *= 2;\n          setScore(prev => prev + column[i]);\n          column.splice(i - 1, 1);\n          moved = true;\n        }\n      }\n      const newColumn = [...Array(4 - column.length).fill(0), ...column];\n      for (let i = 0; i < 4; i++) {\n        if (board[i][j] !== newColumn[i]) {\n          moved = true;\n        }\n        board[i][j] = newColumn[i];\n      }\n    }\n    return moved;\n  };\n  const checkGameOver = () => {\n    // Check for empty cells\n    for (let i = 0; i < 4; i++) {\n      for (let j = 0; j < 4; j++) {\n        if (board[i][j] === 0) return;\n      }\n    }\n\n    // Check for possible merges\n    for (let i = 0; i < 4; i++) {\n      for (let j = 0; j < 4; j++) {\n        if (i < 3 && board[i][j] === board[i + 1][j] || j < 3 && board[i][j] === board[i][j + 1]) {\n          return;\n        }\n      }\n    }\n    setGameOver(true);\n  };\n  const resetGame = () => {\n    setBoard(Array(4).fill().map(() => Array(4).fill(0)));\n    setScore(0);\n    setGameOver(false);\n    addRandomTile();\n    addRandomTile();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-100 flex flex-col items-center justify-center\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-8 rounded-lg shadow-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-4xl font-bold text-gray-800\",\n          children: \"2048\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-right\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-2xl font-bold text-gray-700\",\n            children: [\"Score: \", score]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: resetGame,\n            className: \"mt-2 px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600\",\n            children: \"New Game\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-4 gap-4 bg-gray-200 p-4 rounded-lg\",\n        children: board.map((row, i) => row.map((cell, j) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `w-20 h-20 flex items-center justify-center rounded-lg text-2xl font-bold\n                  ${cell === 0 ? 'bg-gray-300' : 'bg-yellow-100'}\n                  ${cell >= 2048 ? 'bg-yellow-400' : ''}\n                  transition-all duration-200`,\n          children: cell !== 0 && cell\n        }, `${i}-${j}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 15\n        }, this)))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this), gameOver && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4 text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-2xl font-bold text-red-500\",\n          children: \"Game Over!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: resetGame,\n          className: \"mt-2 px-4 py-2 bg-red-500 text-white rounded hover:bg-red-600\",\n          children: \"Try Again\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 190,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"nssiv7lLK4lRBgcNEt9gZ2UXe7Y=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","board","setBoard","Array","fill","map","score","setScore","gameOver","setGameOver","addRandomTile","emptyCells","forEach","row","i","cell","j","push","length","Math","floor","random","newBoard","handleKeyDown","event","moved","JSON","parse","stringify","key","moveUp","moveDown","moveLeft","moveRight","checkGameOver","window","addEventListener","removeEventListener","filter","prev","splice","newRow","column","newColumn","resetGame","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/dbasch/work/entropy-grid/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction App() {\n  const [board, setBoard] = useState(Array(4).fill().map(() => Array(4).fill(0)));\n  const [score, setScore] = useState(0);\n  const [gameOver, setGameOver] = useState(false);\n\n  // Initialize the game with two random tiles\n  useEffect(() => {\n    addRandomTile();\n    addRandomTile();\n  }, []);\n\n  // Add a random tile (2 or 4) to an empty cell\n  const addRandomTile = () => {\n    const emptyCells = [];\n    board.forEach((row, i) => {\n      row.forEach((cell, j) => {\n        if (cell === 0) {\n          emptyCells.push([i, j]);\n        }\n      });\n    });\n\n    if (emptyCells.length > 0) {\n      const [i, j] = emptyCells[Math.floor(Math.random() * emptyCells.length)];\n      const newBoard = [...board];\n      newBoard[i][j] = Math.random() < 0.9 ? 2 : 4;\n      setBoard(newBoard);\n    }\n  };\n\n  // Handle keyboard events\n  useEffect(() => {\n    const handleKeyDown = (event) => {\n      if (gameOver) return;\n\n      let moved = false;\n      const newBoard = JSON.parse(JSON.stringify(board));\n\n      switch (event.key) {\n        case 'ArrowUp':\n          moved = moveUp(newBoard);\n          break;\n        case 'ArrowDown':\n          moved = moveDown(newBoard);\n          break;\n        case 'ArrowLeft':\n          moved = moveLeft(newBoard);\n          break;\n        case 'ArrowRight':\n          moved = moveRight(newBoard);\n          break;\n        default:\n          return;\n      }\n\n      if (moved) {\n        setBoard(newBoard);\n        addRandomTile();\n        checkGameOver();\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  }, [board, gameOver]);\n\n  // Move functions will be implemented here\n  const moveLeft = (board) => {\n    let moved = false;\n    for (let i = 0; i < 4; i++) {\n      const row = board[i].filter(cell => cell !== 0);\n      for (let j = 0; j < row.length - 1; j++) {\n        if (row[j] === row[j + 1]) {\n          row[j] *= 2;\n          setScore(prev => prev + row[j]);\n          row.splice(j + 1, 1);\n          moved = true;\n        }\n      }\n      const newRow = [...row, ...Array(4 - row.length).fill(0)];\n      if (JSON.stringify(board[i]) !== JSON.stringify(newRow)) {\n        moved = true;\n      }\n      board[i] = newRow;\n    }\n    return moved;\n  };\n\n  const moveRight = (board) => {\n    let moved = false;\n    for (let i = 0; i < 4; i++) {\n      const row = board[i].filter(cell => cell !== 0);\n      for (let j = row.length - 1; j > 0; j--) {\n        if (row[j] === row[j - 1]) {\n          row[j] *= 2;\n          setScore(prev => prev + row[j]);\n          row.splice(j - 1, 1);\n          moved = true;\n        }\n      }\n      const newRow = [...Array(4 - row.length).fill(0), ...row];\n      if (JSON.stringify(board[i]) !== JSON.stringify(newRow)) {\n        moved = true;\n      }\n      board[i] = newRow;\n    }\n    return moved;\n  };\n\n  const moveUp = (board) => {\n    let moved = false;\n    for (let j = 0; j < 4; j++) {\n      let column = board.map(row => row[j]).filter(cell => cell !== 0);\n      for (let i = 0; i < column.length - 1; i++) {\n        if (column[i] === column[i + 1]) {\n          column[i] *= 2;\n          setScore(prev => prev + column[i]);\n          column.splice(i + 1, 1);\n          moved = true;\n        }\n      }\n      const newColumn = [...column, ...Array(4 - column.length).fill(0)];\n      for (let i = 0; i < 4; i++) {\n        if (board[i][j] !== newColumn[i]) {\n          moved = true;\n        }\n        board[i][j] = newColumn[i];\n      }\n    }\n    return moved;\n  };\n\n  const moveDown = (board) => {\n    let moved = false;\n    for (let j = 0; j < 4; j++) {\n      let column = board.map(row => row[j]).filter(cell => cell !== 0);\n      for (let i = column.length - 1; i > 0; i--) {\n        if (column[i] === column[i - 1]) {\n          column[i] *= 2;\n          setScore(prev => prev + column[i]);\n          column.splice(i - 1, 1);\n          moved = true;\n        }\n      }\n      const newColumn = [...Array(4 - column.length).fill(0), ...column];\n      for (let i = 0; i < 4; i++) {\n        if (board[i][j] !== newColumn[i]) {\n          moved = true;\n        }\n        board[i][j] = newColumn[i];\n      }\n    }\n    return moved;\n  };\n\n  const checkGameOver = () => {\n    // Check for empty cells\n    for (let i = 0; i < 4; i++) {\n      for (let j = 0; j < 4; j++) {\n        if (board[i][j] === 0) return;\n      }\n    }\n\n    // Check for possible merges\n    for (let i = 0; i < 4; i++) {\n      for (let j = 0; j < 4; j++) {\n        if (\n          (i < 3 && board[i][j] === board[i + 1][j]) ||\n          (j < 3 && board[i][j] === board[i][j + 1])\n        ) {\n          return;\n        }\n      }\n    }\n\n    setGameOver(true);\n  };\n\n  const resetGame = () => {\n    setBoard(Array(4).fill().map(() => Array(4).fill(0)));\n    setScore(0);\n    setGameOver(false);\n    addRandomTile();\n    addRandomTile();\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-100 flex flex-col items-center justify-center\">\n      <div className=\"bg-white p-8 rounded-lg shadow-lg\">\n        <div className=\"flex justify-between items-center mb-4\">\n          <h1 className=\"text-4xl font-bold text-gray-800\">2048</h1>\n          <div className=\"text-right\">\n            <div className=\"text-2xl font-bold text-gray-700\">Score: {score}</div>\n            <button\n              onClick={resetGame}\n              className=\"mt-2 px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600\"\n            >\n              New Game\n            </button>\n          </div>\n        </div>\n        \n        <div className=\"grid grid-cols-4 gap-4 bg-gray-200 p-4 rounded-lg\">\n          {board.map((row, i) =>\n            row.map((cell, j) => (\n              <div\n                key={`${i}-${j}`}\n                className={`w-20 h-20 flex items-center justify-center rounded-lg text-2xl font-bold\n                  ${cell === 0 ? 'bg-gray-300' : 'bg-yellow-100'}\n                  ${cell >= 2048 ? 'bg-yellow-400' : ''}\n                  transition-all duration-200`}\n              >\n                {cell !== 0 && cell}\n              </div>\n            ))\n          )}\n        </div>\n\n        {gameOver && (\n          <div className=\"mt-4 text-center\">\n            <p className=\"text-2xl font-bold text-red-500\">Game Over!</p>\n            <button\n              onClick={resetGame}\n              className=\"mt-2 px-4 py-2 bg-red-500 text-white rounded hover:bg-red-600\"\n            >\n              Try Again\n            </button>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}